{"version":3,"sources":["components/atoms/Input/Input.module.scss","assets/arrowClose.svg","assets/arrowOpen.svg","assets/loadingSpinner.svg","assets/logo.svg","assets/search.svg","assets/close.svg","theme/MainTheme.js","theme/GlobalStyle.js","templates/MainTemplate.js","templates/UserTemplate.js","components/atoms/Paragraph/Paragraph.js","components/atoms/ExpandButton/ExpandButton.js","components/atoms/ListElement/ListElement.js","components/molecules/DetailsList/DetailsList.js","components/atoms/LoadingSpinner/LoadingSpinner.js","components/organisms/FilmItem/FilmItem.js","components/atoms/Logo/Logo.js","components/atoms/Input/Input.js","api.js","components/atoms/Button/Button.js","components/organisms/NewItemBar/NewItemBar.js","views/UserPage.js","views/Root.js","index.js"],"names":["module","exports","theme","colors","mainColor","fontColor","listElement","formColor","buttonBgColor","errorColor","fontSize","bigSize","smallSize","GlobalStyle","createGlobalStyle","MainTemplate","children","UserTemplate","Paragraph","styled","p","listType","css","propTypes","PropTypes","string","ExpandButton","div","arrowOpenIcon","active","arrowCloseIcon","ListElement","li","planetName","StyledWrapper","DetailsList","LoadingSpinner","loadingSpinner","small","bool","showingAnimation","keyframes","StyledParagraph","title","data","StyledExpandButton","StyledWrapperList","loading","StyledLoadingSpinner","StyledDataContainer","FilmItem","planetsUrl","onClick","id","isActive","addPlanet","generate","useState","planets","setPlanets","setLoading","useEffect","undefined","forEach","planet","a","fetch","res","json","oldArr","delay","setTimeout","fetchId","map","item","key","created","name","rotation_period","orbital_period","diameter","climate","surface_water","population","defaultProps","Logo","svg","logoIcon","Input","label","placeholder","onChange","value","className","styles","formItem","autoComplete","input","type","required","htmlFor","formItemBar","PLANETS_API","FILMS_API","Button","button","inactive","mainColors","StyledItemBarWrapper","isActiveTab","StyledTitleBar","StyledErrorMsg","StyledSubmitButton","SubmitButton","Search","searchIcon","StyledInput","StyledResultsWrapper","StyledResultPlanet","StyledJoinPlanet","closeIcon","StyledJoinPlanetWrapper","NewItemBar","state","correctData","matchResults","listOfJoinPlanet","validate","handleInputChange","e","setState","target","handleFetchPlanet","handleShowBar","prevState","axios","get","then","results","filter","toLowerCase","includes","result","handleValidateForm","checkShowResult","length","handleJoinPlanet","prev","handleDeletePlanet","index","this","handleAddMovie","props","as","Component","null","Line","UserPage","films","setFilms","setActive","newMovies","setNewMovie","fetchFilms","episodeId","episode_id","newMovie","filterPlanets","handleValidate","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9de90c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formItem\":\"Input_formItem__3re4V\",\"formItemBar\":\"Input_formItemBar__mc3-N\",\"label\":\"Input_label__1wAlI\",\"input\":\"Input_input__3EaA9\",\"textarea\":\"Input_textarea__3K3MU\"};","module.exports = __webpack_public_path__ + \"static/media/arrowClose.81e948ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowOpen.da45c4c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/loadingSpinner.2767e8a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.79977f05.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.d8b5abdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.de203a0d.svg\";","export const theme = {\r\n  colors: {\r\n    mainColor: '#E0E6EE',\r\n    fontColor: '#00687F',\r\n    listElement: '#555555',\r\n    formColor: '#474747',\r\n    buttonBgColor: '#1BA1BE',\r\n    errorColor: '#FF1616',\r\n  },\r\n  fontSize: {\r\n    bigSize: '16px',\r\n    smallSize: '12px',\r\n  },\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css2?family=Barlow:wght@300;500;700&display=swap');\r\n  \r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    margin:0;\r\n    padding:0;\r\n  }\r\n  \r\n  html {\r\n    font-size: 62.5%; \r\n    background-color:#E0E6EE;\r\n  }\r\n  \r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: \"Barlow\", sans-serif;\r\n    height:100vh;\r\n  }\r\n  #root{\r\n    width:100%;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { theme } from 'theme/MainTheme';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\n\r\nconst MainTemplate = ({ children }) => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nMainTemplate.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default MainTemplate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainTemplate from 'templates/MainTemplate';\r\n\r\nconst UserTemplate = ({ children }) => {\r\n  return <MainTemplate>{children}</MainTemplate>;\r\n};\r\n\r\nUserTemplate.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default UserTemplate;\r\n","import styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nconst Paragraph = styled.p`\r\n  font-size: ${({ theme: { fontSize } }) => fontSize.bigSize};\r\n  font-weight: bold;\r\n  line-height: 19px;\r\n  color: ${({ theme: { colors } }) => colors.fontColor};\r\n  ${({ listType }) =>\r\n    listType &&\r\n    css`\r\n      font-weight: normal;\r\n      font-size: ${({ theme: { fontSize } }) => fontSize.smallSize};\r\n    `}\r\n`;\r\nParagraph.propTypes = {\r\n  listType: PropTypes.string,\r\n};\r\nexport default Paragraph;\r\n","import styled, { css } from 'styled-components';\r\nimport arrowCloseIcon from 'assets/arrowClose.svg';\r\nimport arrowOpenIcon from 'assets/arrowOpen.svg';\r\nconst ExpandButton = styled.div`\r\n  width: 18px;\r\n  height: 18px;\r\n  cursor: pointer;\r\n  background: url(${arrowOpenIcon});\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      background: url(${arrowCloseIcon});\r\n    `}\r\n`;\r\n\r\nexport default ExpandButton;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst ListElement = styled.li`\r\n  padding: 10px 15px;\r\n  line-height: 14px;\r\n  list-style: none;\r\n  text-decoration: none;\r\n  font-size: ${({ theme: { fontSize } }) => fontSize.smallSize};\r\n  ${({ planetName }) =>\r\n    planetName &&\r\n    css`\r\n      ${({ theme: { colors } }) => colors.fontColor};\r\n    `}\r\n`;\r\n\r\nexport default ListElement;\r\n","import React from 'react';\r\nimport ListElement from 'components/atoms/ListElement/ListElement';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-around;\r\n  @media (max-width: 800px) {\r\n    position: absolute;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-bottom: 15px;\r\n    margin-top: 7px;\r\n  }\r\n`;\r\n\r\nconst DetailsList = () => {\r\n  return (\r\n    <StyledWrapper>\r\n      <ListElement planetName>Planet Name</ListElement>\r\n      <ListElement>Rotation period</ListElement>\r\n      <ListElement>Orbital period</ListElement>\r\n      <ListElement>Diameter</ListElement>\r\n      <ListElement>Climate</ListElement>\r\n      <ListElement>Surface water</ListElement>\r\n      <ListElement>Population</ListElement>\r\n    </StyledWrapper>\r\n  );\r\n};\r\nexport default DetailsList;\r\n","import styled, { css } from 'styled-components';\r\nimport loadingSpinner from 'assets/loadingSpinner.svg';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoadingSpinner = styled.div`\r\n  background: url(${loadingSpinner}) no-repeat;\r\n  width: 45px;\r\n  height: 40px;\r\n  background-size: 100%;\r\n\r\n  ${({ small }) =>\r\n    small &&\r\n    css`\r\n      height: 20px;\r\n      width: 22px;\r\n    `}\r\n`;\r\n\r\nLoadingSpinner.propTypes = {\r\n  small: PropTypes.bool,\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport ExpandButton from 'components/atoms/ExpandButton/ExpandButton';\r\nimport DetailsList from 'components/molecules/DetailsList/DetailsList';\r\nimport LoadingSpinner from 'components/atoms/LoadingSpinner/LoadingSpinner';\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 730px;\r\n  background-color: #fff;\r\n  position: relative;\r\n  box-shadow: 0px 4px 12px rgba(224, 230, 238, 0.5);\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 100px);\r\n  grid-template-rows: repeat(auto-fill, minmax(60px, 1fr));\r\n  @media (max-width: 800px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\n\r\nconst showingAnimation = keyframes`\r\nfrom{\r\n  opacity:0;\r\n}\r\n  to:opacity:1;\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  position: relative;\r\n  left: 5%;\r\n  top: 15px;\r\n\r\n  ${({ title }) =>\r\n    title &&\r\n    css`\r\n      grid-column: 1/-1;\r\n      grid-row: 1/2;\r\n      line-height: 30px;\r\n    `}\r\n  ${({ data }) =>\r\n    data &&\r\n    css`\r\n      animation: ${showingAnimation} 1s;\r\n      animation-delay: 0.5;\r\n      justify-self: center;\r\n    `}\r\n    @media (max-width: 800px) {\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\nconst StyledExpandButton = styled(ExpandButton)`\r\n  position: relative;\r\n  transform: translateY(-50%);\r\n  z-index: 9999;\r\n  grid-template-columns: 1 / span 2;\r\n  margin: 20px;\r\n  top: 10px;\r\n  right: 20px;\r\n  grid-row: 1/2;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledWrapperList = styled.div`\r\n  grid-column: 1/-1;\r\n  grid-row: 2/3;\r\n  height: 0;\r\n  opacity: 0;\r\n\r\n  transition: opacity 0.4s ease-in-out, height 0.2s ease;\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      transform: translate(0);\r\n      height: 100%;\r\n      opacity: 1;\r\n    `}\r\n  ${({ loading, active }) =>\r\n    loading &&\r\n    active &&\r\n    css`\r\n      height: 150px;\r\n    `}\r\n`;\r\nconst StyledLoadingSpinner = styled(LoadingSpinner)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n`;\r\nconst StyledDataContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 730px;\r\n  z-index: 99999;\r\n  display: grid;\r\n  padding: 0;\r\n  grid-template-columns: repeat(7, 100px);\r\n  grid-template-rows: repeat(auto-fill, minmax(60px, 1fr));\r\n  @media (max-width: 800px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\nconst FilmItem = ({ title, data, planetsUrl, onClick, id, isActive, addPlanet, generate }) => {\r\n  const [planets, setPlanets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // fetch maped data about planets from fetched data from props\r\n  useEffect(() => {\r\n    if (planetsUrl !== undefined) {\r\n      function fetchPlanets() {\r\n        planetsUrl.forEach(async (planet) => {\r\n          let res = await fetch(planet);\r\n          let data = await res.json();\r\n          setPlanets((oldArr) => [...oldArr, data]);\r\n        });\r\n      }\r\n      fetchPlanets();\r\n    }\r\n  }, [planetsUrl]);\r\n\r\n  // used delay for slower loading data\r\n  const delay = () =>\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  const fetchId = [\r\n    'name',\r\n    'rotation_period',\r\n    'orbital_period',\r\n    'diameter',\r\n    'climate',\r\n    'surface_water',\r\n    'population',\r\n  ];\r\n\r\n  if (loading) {\r\n    return (\r\n      <StyledWrapper>\r\n        <StyledParagraph title=\"true\">{title}</StyledParagraph>\r\n        <StyledExpandButton\r\n          onClick={() => {\r\n            //open tab and start counting for ending of delay\r\n            delay();\r\n            onClick(id);\r\n          }}\r\n          active={isActive}\r\n        />\r\n        <StyledWrapperList loading=\"true\" active={isActive}>\r\n          <DetailsList />\r\n          <StyledLoadingSpinner />\r\n        </StyledWrapperList>\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n  if (!addPlanet) {\r\n    return (\r\n      <StyledWrapper>\r\n        <StyledParagraph title=\"true\">{title}</StyledParagraph>\r\n        <StyledExpandButton\r\n          onClick={() => {\r\n            delay();\r\n            onClick(id);\r\n          }}\r\n          active={isActive}\r\n        />\r\n        <StyledWrapperList active={isActive}>\r\n          <DetailsList />\r\n\r\n          {/* generate all data about the planet from the movie */}\r\n          {planets.map((planet, id) => (\r\n            <StyledDataContainer key={id}>\r\n              {fetchId.map((item) => (\r\n                <StyledParagraph data=\"true\" key={item} listType>\r\n                  {planet[item]}\r\n                </StyledParagraph>\r\n              ))}\r\n            </StyledDataContainer>\r\n          ))}\r\n        </StyledWrapperList>\r\n      </StyledWrapper>\r\n    );\r\n  } else if (addPlanet === true && generate === true && data !== undefined) {\r\n    return (\r\n      <StyledWrapper>\r\n        <StyledParagraph title=\"true\">{title}</StyledParagraph>\r\n        <StyledExpandButton\r\n          onClick={() => {\r\n            delay();\r\n            onClick(id);\r\n          }}\r\n          active={isActive}\r\n        />\r\n        <StyledWrapperList active={isActive}>\r\n          <DetailsList />\r\n\r\n          {/* generate all data about the planet from the movie */}\r\n          {data.map((item) => (\r\n            <StyledDataContainer key={item.created}>\r\n              <StyledParagraph data=\"true\" key={item.name} listType>\r\n                {item.name}\r\n              </StyledParagraph>\r\n              <StyledParagraph data=\"true\" key={item.rotation_period} listType>\r\n                {item.rotation_period}\r\n              </StyledParagraph>\r\n              <StyledParagraph data=\"true\" key={item.orbital_period} listType>\r\n                {item.orbital_period}\r\n              </StyledParagraph>\r\n              <StyledParagraph data=\"true\" key={item.diameter} listType>\r\n                {item.diameter}\r\n              </StyledParagraph>\r\n              <StyledParagraph data=\"true\" key={item.climate} listType>\r\n                {item.climate}\r\n              </StyledParagraph>\r\n              <StyledParagraph data=\"true\" key={item.surface_water} listType>\r\n                {item.surface_water}\r\n              </StyledParagraph>\r\n              <StyledParagraph data=\"true\" key={item.population} listType>\r\n                {item.population}\r\n              </StyledParagraph>\r\n            </StyledDataContainer>\r\n          ))}\r\n        </StyledWrapperList>\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n};\r\n\r\nFilmItem.propTypes = {\r\n  title: PropTypes.string,\r\n  planetsUrl: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n  isActive: PropTypes.bool,\r\n};\r\nFilmItem.defaultProps = {\r\n  title: '',\r\n  planetsUrl: undefined,\r\n  onClick: null,\r\n  isActive: false,\r\n};\r\nexport default FilmItem;\r\n","import styled from 'styled-components';\r\nimport logoIcon from 'assets/logo.svg';\r\n\r\nconst Logo = styled.svg`\r\n  background: url(${logoIcon}) no-repeat;\r\n  background-size: 100%;\r\n  width: 315px;\r\n  height: 80px;\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport default Logo;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Input.module.scss';\n\nconst Input = ({ name, label, placeholder, onChange, value, isActive, children }) => (\n  <div className={styles.formItem}>\n    <input\n      autoComplete=\"off\"\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      name={name}\n      id={name}\n      required\n      placeholder={placeholder}\n      onChange={onChange}\n    />\n    {children}\n    <label className={styles.label} htmlFor={name}>\n      {label}\n    </label>\n    <div className={styles.formItemBar} />\n  </div>\n);\n\nInput.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  isActive: PropTypes.bool,\n  children: PropTypes.node,\n};\nInput.defaultProps = {\n  name: '',\n  label: '',\n  placeholder: '',\n  onChange: null,\n  isActive: false,\n  children: null,\n};\n\nexport default Input;\n","export const PLANETS_API = 'https://swapi.dev/api/planets/?format=json';\r\nexport const FILMS_API = 'https://swapi.dev/api/films/?format=json';\r\n","import styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nconst Button = styled.button`\r\n  background: ${({ theme: { colors } }) => colors.buttonBgColor};\r\n  border-radius: 4px;\r\n  width: 160px;\r\n  font-weight: bold;\r\n  height: 33px;\r\n  font-size: ${({ theme: { fontSize } }) => fontSize.smallSize};\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  letter-spacing: 0.05em;\r\n  line-height: 16px;\r\n  color: #fff;\r\n  margin: 20px;\r\n  ${({ inactive }) =>\r\n    inactive &&\r\n    css`\r\n      background-color: ${({ theme: { mainColors } }) => mainColors.mainColor};\r\n    `}\r\n`;\r\n\r\nButton.propTypes = {\r\n  inactive: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport { PLANETS_API } from 'api';\r\nimport styled, { css } from 'styled-components';\r\nimport ExpandButton from 'components/atoms/ExpandButton/ExpandButton';\r\nimport SubmitButton from 'components/atoms/Button/Button';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport searchIcon from 'assets/search.svg';\r\nimport closeIcon from 'assets/close.svg';\r\nimport axios from 'axios';\r\nconst StyledItemBarWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 730px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 4px 12px rgba(224, 230, 238, 0.5);\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  max-height: 380px;\r\n  margin-top: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  padding: 20px;\r\n  height: 60px;\r\n  transition: height 0.4s;\r\n  ${({ isActiveTab }) =>\r\n    isActiveTab &&\r\n    css`\r\n      height: 50vh;\r\n    `}\r\n`;\r\nconst StyledTitleBar = styled(Paragraph)`\r\n  position: absolute;\r\n  top: 15px;\r\n  left: 5%;\r\n  line-height: 30px;\r\n`;\r\nconst StyledExpandButton = styled(ExpandButton)`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 20px;\r\n  @media (max-width: 800px) {\r\n    right: 40px;\r\n  }\r\n`;\r\nconst StyledErrorMsg = styled(Paragraph)`\r\n  color: red;\r\n  border: 1px solid red;\r\n  padding: 5px 10px;\r\n  width: 70%;\r\n  box-shadow: 0px 4px 4px rgba(196, 196, 196, 0.5);\r\n  margin-bottom: 10px;\r\n`;\r\nconst StyledSubmitButton = styled(SubmitButton)`\r\n  position: absolute;\r\n  bottom: 10%;\r\n  right: 14%;\r\n`;\r\n\r\nconst Search = styled.div`\r\n  background-image: url(${searchIcon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 100%;\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  right: 2%;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\nconst StyledInput = styled(Input)`\r\n  position: relative;\r\n`;\r\nconst StyledResultsWrapper = styled.div`\r\n  width: 70%;\r\n  background-color: white;\r\n  border: 1px solid #e5e5e5;\r\n  box-shadow: 0px 4px 4px rgba(196, 196, 196, 0.5);\r\n  z-index: 99999;\r\n`;\r\nconst StyledResultPlanet = styled(Paragraph)`\r\n  display: block;\r\n  padding: 3px;\r\n  cursor: pointer;\r\n`;\r\nconst StyledJoinPlanet = styled(Paragraph)`\r\n  border: 1px solid #999999;\r\n  border-radius: 18px;\r\n  width: 122px;\r\n  height: 32px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  margin: 3px;\r\n  align-items: center;\r\n  position: relative;\r\n  background: url(${closeIcon}) no-repeat;\r\n  background-position: 90% 50%;\r\n  cursor: pointer;\r\n`;\r\nconst StyledJoinPlanetWrapper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nclass NewItemBar extends Component {\r\n  state = {\r\n    title: '',\r\n    planet: '',\r\n    correctData: '',\r\n    matchResults: [],\r\n    isActiveTab: false,\r\n    listOfJoinPlanet: [],\r\n    validate: false,\r\n  };\r\n  handleInputChange = async (e, type) => {\r\n    switch (type) {\r\n      case 'title':\r\n        this.setState({\r\n          correctData: '',\r\n          title: e.target.value,\r\n        });\r\n\r\n        break;\r\n\r\n      case 'planet':\r\n        await this.setState({\r\n          correctData: '',\r\n          planet: e.target.value,\r\n        });\r\n        await this.handleFetchPlanet();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  handleShowBar = () => {\r\n    this.setState((prevState) => ({\r\n      isActiveTab: !prevState.isActiveTab,\r\n    }));\r\n  };\r\n  handleFetchPlanet = () => {\r\n    const { planet, listOfJoinPlanet } = this.state;\r\n    if (planet === '') return;\r\n    axios\r\n      .get(PLANETS_API)\r\n      .then(({ data: { results } }) => {\r\n        //filter data from planet which was written in input\r\n        const matchResult = results.filter(({ name }) =>\r\n          name.toLowerCase().includes(planet.toLowerCase()),\r\n        );\r\n\r\n        //check if fetched planets is in our state\r\n        const filteredFromStoredPlanet = matchResult.filter(\r\n          (result) => !listOfJoinPlanet.includes(result.name),\r\n        );\r\n\r\n        return filteredFromStoredPlanet;\r\n      })\r\n      .then((matchResults) => this.setState({ matchResults }));\r\n  };\r\n  //validation => if first letter is capital\r\n  handleValidateForm = () => {\r\n    const { title } = this.state;\r\n    if (title === '') {\r\n      this.setState({\r\n        correctData: null,\r\n      });\r\n      return false;\r\n    }\r\n    if (title[0] === title[0].toLowerCase()) {\r\n      this.setState({ correctData: false });\r\n      return false;\r\n    } else {\r\n      this.setState({\r\n        title: '',\r\n        planet: '',\r\n        listOfJoinPlanet: '',\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n  checkShowResult = () => {\r\n    const { matchResults, planet } = this.state;\r\n    if (matchResults.length === 0 || planet === '') {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleJoinPlanet = (name) => {\r\n    //check if the joined planet is in our list\r\n\r\n    this.setState((prev) => ({\r\n      listOfJoinPlanet: [...prev.listOfJoinPlanet, name],\r\n      planet: '',\r\n    }));\r\n  };\r\n\r\n  handleDeletePlanet = (id) => {\r\n    this.setState((prevState) => ({\r\n      listOfJoinPlanet: prevState.listOfJoinPlanet.filter((planet, index) => index !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { title, planet, correctData, isActiveTab, matchResults, listOfJoinPlanet } = this.state;\r\n    const { handleAddMovie } = this.props;\r\n    return (\r\n      <>\r\n        <StyledItemBarWrapper isActiveTab={isActiveTab}>\r\n          <StyledTitleBar>Add movie</StyledTitleBar>\r\n          <StyledExpandButton active={isActiveTab} onClick={this.handleShowBar} />\r\n\r\n          {isActiveTab && (\r\n            <>\r\n              <Input\r\n                onChange={(e) => this.handleInputChange(e, 'title')}\r\n                value={title}\r\n                name=\"title\"\r\n                label=\"Movie title\"\r\n                placeholder=\"Please enter the title of the movie\"\r\n              />\r\n              {correctData === false ? (\r\n                <StyledErrorMsg listType>\r\n                  Movie title name must start with a capital letter.\r\n                </StyledErrorMsg>\r\n              ) : correctData === null ? (\r\n                <StyledErrorMsg listType>Please type the title of the movie.</StyledErrorMsg>\r\n              ) : null}\r\n              <StyledJoinPlanetWrapper>\r\n                {listOfJoinPlanet.length > 0 &&\r\n                  listOfJoinPlanet.map((planet, index) => (\r\n                    <>\r\n                      <StyledJoinPlanet\r\n                        onClick={() => this.handleDeletePlanet(index)}\r\n                        key={planet}\r\n                        listType\r\n                      >\r\n                        {planet}\r\n                      </StyledJoinPlanet>\r\n                    </>\r\n                  ))}\r\n              </StyledJoinPlanetWrapper>\r\n              <StyledInput\r\n                value={planet}\r\n                onChange={(e) => {\r\n                  this.handleInputChange(e, 'planet');\r\n                }}\r\n                name=\"planet\"\r\n                placeholder=\"Search for the planet in database\"\r\n                label=\"Add planet\"\r\n              >\r\n                <Search />\r\n              </StyledInput>\r\n              {this.checkShowResult() && (\r\n                <StyledResultsWrapper>\r\n                  {matchResults.map(({ name }) => (\r\n                    <StyledResultPlanet\r\n                      onClick={() => this.handleJoinPlanet(name)}\r\n                      as={'div'}\r\n                      key={name}\r\n                      listType\r\n                    >\r\n                      {name}\r\n                    </StyledResultPlanet>\r\n                  ))}\r\n                </StyledResultsWrapper>\r\n              )}\r\n              <StyledSubmitButton\r\n                onClick={() => {\r\n                  handleAddMovie(this.handleValidateForm(), title, listOfJoinPlanet);\r\n                }}\r\n              >\r\n                ADD MOVIE\r\n              </StyledSubmitButton>\r\n            </>\r\n          )}\r\n        </StyledItemBarWrapper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nNewItemBar.propTypes = {\r\n  handleAddMovie: PropTypes.func,\r\n};\r\nNewItemBar.defaultProps = {\r\n  handleAddMovie: PropTypes.null,\r\n};\r\nexport default NewItemBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport UserTemplate from 'templates/UserTemplate';\r\nimport FilmItem from 'components/organisms/FilmItem/FilmItem';\r\nimport styled from 'styled-components';\r\nimport Logo from 'components/atoms/Logo/Logo';\r\nimport LoadingSpinner from 'components/atoms/LoadingSpinner/LoadingSpinner';\r\nimport NewItemBar from 'components/organisms/NewItemBar/NewItemBar';\r\nimport { PLANETS_API, FILMS_API } from 'api';\r\nconst Line = styled.div`\r\n  width: 100%;\r\n  border: 2px dashed #ffffff;\r\n`;\r\nconst StyledWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst UserPage = () => {\r\n  const [films, setFilms] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isActive, setActive] = useState(null);\r\n  const [newMovies, setNewMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchFilms() {\r\n      let res = await fetch(FILMS_API);\r\n      let { results } = await res.json();\r\n      setFilms(results);\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchFilms();\r\n  }, []);\r\n  const handleAddMovie = (handleValidate, title, planets) => {\r\n    if (!handleValidate) return;\r\n    fetch(PLANETS_API).then((res) =>\r\n      res.json().then(({ results }) => {\r\n        const filterPlanets = results.filter((result) => planets.includes(result.name));\r\n        return setNewMovie([...newMovies, { filterPlanets, title }]);\r\n      }),\r\n    );\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <UserTemplate>\r\n        <StyledWrapper>\r\n          <Logo />\r\n          <LoadingSpinner />\r\n          <Line />\r\n          <FilmItem />\r\n        </StyledWrapper>\r\n      </UserTemplate>\r\n    );\r\n  }\r\n  return (\r\n    <UserTemplate>\r\n      <StyledWrapper>\r\n        <Logo />\r\n        {films.map(({ title, planets, episode_id: episodeId }, id) => (\r\n          <FilmItem\r\n            addPlanet={false}\r\n            onClick={(id) => (id === isActive ? setActive(null) : setActive(id))}\r\n            isActive={id === isActive && true}\r\n            key={episodeId}\r\n            id={id}\r\n            title={title}\r\n            planetsUrl={planets}\r\n          />\r\n        ))}\r\n        {newMovies.length !== 0 &&\r\n          newMovies.map((newMovie) => (\r\n            <FilmItem\r\n              title={newMovie.title}\r\n              data={newMovie.filterPlanets}\r\n              generate={newMovie.length !== 0 ? true : false}\r\n              addPlanet={true}\r\n              onClick={() =>\r\n                newMovie.title === isActive ? setActive(null) : setActive(newMovie.title)\r\n              }\r\n              isActive={newMovie.title === isActive && true}\r\n              key={newMovie.title}\r\n              id={newMovie}\r\n            />\r\n          ))}\r\n        <Line />\r\n        <NewItemBar\r\n          handleAddMovie={(correctData, title, planets) =>\r\n            handleAddMovie(correctData, title, planets)\r\n          }\r\n        ></NewItemBar>\r\n      </StyledWrapper>\r\n    </UserTemplate>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React from 'react';\nimport UserPage from './UserPage';\n\nconst Root = () => {\n  return <UserPage />;\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './views/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}